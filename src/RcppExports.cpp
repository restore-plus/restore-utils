// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// C_Raster_Get_Scale
NumericVector C_Raster_Get_Scale(std::string filename);
RcppExport SEXP _restoreutils_C_Raster_Get_Scale(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(C_Raster_Get_Scale(filename));
    return rcpp_result_gen;
END_RCPP
}
// C_Raster_Get_Offset
NumericVector C_Raster_Get_Offset(std::string filename);
RcppExport SEXP _restoreutils_C_Raster_Get_Offset(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(C_Raster_Get_Offset(filename));
    return rcpp_result_gen;
END_RCPP
}
// C_Raster_Set_Scale_Offset
void C_Raster_Set_Scale_Offset(std::string filename, double scale, double offset);
RcppExport SEXP _restoreutils_C_Raster_Set_Scale_Offset(SEXP filenameSEXP, SEXP scaleSEXP, SEXP offsetSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    Rcpp::traits::input_parameter< double >::type offset(offsetSEXP);
    C_Raster_Set_Scale_Offset(filename, scale, offset);
    return R_NilValue;
END_RCPP
}
// C_remap_values
NumericMatrix C_remap_values(NumericMatrix& data, int source, int target);
RcppExport SEXP _restoreutils_C_remap_values(SEXP dataSEXP, SEXP sourceSEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type source(sourceSEXP);
    Rcpp::traits::input_parameter< int >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(C_remap_values(data, source, target));
    return rcpp_result_gen;
END_RCPP
}
// C_trajectory_transition_analysis
NumericMatrix C_trajectory_transition_analysis(NumericMatrix data, int reference_class, int neighbor_class);
RcppExport SEXP _restoreutils_C_trajectory_transition_analysis(SEXP dataSEXP, SEXP reference_classSEXP, SEXP neighbor_classSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type reference_class(reference_classSEXP);
    Rcpp::traits::input_parameter< int >::type neighbor_class(neighbor_classSEXP);
    rcpp_result_gen = Rcpp::wrap(C_trajectory_transition_analysis(data, reference_class, neighbor_class));
    return rcpp_result_gen;
END_RCPP
}
// C_trajectory_neighbor_analysis
NumericMatrix C_trajectory_neighbor_analysis(NumericMatrix data, int reference_class, int replacement_class);
RcppExport SEXP _restoreutils_C_trajectory_neighbor_analysis(SEXP dataSEXP, SEXP reference_classSEXP, SEXP replacement_classSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type reference_class(reference_classSEXP);
    Rcpp::traits::input_parameter< int >::type replacement_class(replacement_classSEXP);
    rcpp_result_gen = Rcpp::wrap(C_trajectory_neighbor_analysis(data, reference_class, replacement_class));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_restoreutils_C_Raster_Get_Scale", (DL_FUNC) &_restoreutils_C_Raster_Get_Scale, 1},
    {"_restoreutils_C_Raster_Get_Offset", (DL_FUNC) &_restoreutils_C_Raster_Get_Offset, 1},
    {"_restoreutils_C_Raster_Set_Scale_Offset", (DL_FUNC) &_restoreutils_C_Raster_Set_Scale_Offset, 3},
    {"_restoreutils_C_remap_values", (DL_FUNC) &_restoreutils_C_remap_values, 3},
    {"_restoreutils_C_trajectory_transition_analysis", (DL_FUNC) &_restoreutils_C_trajectory_transition_analysis, 3},
    {"_restoreutils_C_trajectory_neighbor_analysis", (DL_FUNC) &_restoreutils_C_trajectory_neighbor_analysis, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_restoreutils(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
